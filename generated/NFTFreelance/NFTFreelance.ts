// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class addClientEvent extends ethereum.Event {
  get params(): addClientEvent__Params {
    return new addClientEvent__Params(this);
  }
}

export class addClientEvent__Params {
  _event: addClientEvent;

  constructor(event: addClientEvent) {
    this._event = event;
  }

  get clientId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get email(): string {
    return this._event.parameters[2].value.toString();
  }

  get phone_number(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get company_name(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class addFreelancerEvent extends ethereum.Event {
  get params(): addFreelancerEvent__Params {
    return new addFreelancerEvent__Params(this);
  }
}

export class addFreelancerEvent__Params {
  _event: addFreelancerEvent;

  constructor(event: addFreelancerEvent) {
    this._event = event;
  }

  get freelancerId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get phone_number(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get email(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class assignProjectEvent extends ethereum.Event {
  get params(): assignProjectEvent__Params {
    return new assignProjectEvent__Params(this);
  }
}

export class assignProjectEvent__Params {
  _event: assignProjectEvent;

  constructor(event: assignProjectEvent) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get client(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get freelance(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get listing_price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get project_cost(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class listingMintedEvent extends ethereum.Event {
  get params(): listingMintedEvent__Params {
    return new listingMintedEvent__Params(this);
  }
}

export class listingMintedEvent__Params {
  _event: listingMintedEvent;

  constructor(event: listingMintedEvent) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get client(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get listing_price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get project_cost(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class projectCompleted extends ethereum.Event {
  get params(): projectCompleted__Params {
    return new projectCompleted__Params(this);
  }
}

export class projectCompleted__Params {
  _event: projectCompleted;

  constructor(event: projectCompleted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get client(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get freelancer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get project_cost(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class purchaseListingEvent extends ethereum.Event {
  get params(): purchaseListingEvent__Params {
    return new purchaseListingEvent__Params(this);
  }
}

export class purchaseListingEvent__Params {
  _event: purchaseListingEvent;

  constructor(event: purchaseListingEvent) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get client(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get freelancer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get listing_price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class rejectProjectEvent extends ethereum.Event {
  get params(): rejectProjectEvent__Params {
    return new rejectProjectEvent__Params(this);
  }
}

export class rejectProjectEvent__Params {
  _event: rejectProjectEvent;

  constructor(event: rejectProjectEvent) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get client(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get freelancer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NFTFreelance extends ethereum.SmartContract {
  static bind(address: Address): NFTFreelance {
    return new NFTFreelance("NFTFreelance", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddClientCall extends ethereum.Call {
  get inputs(): AddClientCall__Inputs {
    return new AddClientCall__Inputs(this);
  }

  get outputs(): AddClientCall__Outputs {
    return new AddClientCall__Outputs(this);
  }
}

export class AddClientCall__Inputs {
  _call: AddClientCall;

  constructor(call: AddClientCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _email(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _phone_number(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _company_name(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class AddClientCall__Outputs {
  _call: AddClientCall;

  constructor(call: AddClientCall) {
    this._call = call;
  }
}

export class AddFreelancerCall extends ethereum.Call {
  get inputs(): AddFreelancerCall__Inputs {
    return new AddFreelancerCall__Inputs(this);
  }

  get outputs(): AddFreelancerCall__Outputs {
    return new AddFreelancerCall__Outputs(this);
  }
}

export class AddFreelancerCall__Inputs {
  _call: AddFreelancerCall;

  constructor(call: AddFreelancerCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _email(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _phone_number(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddFreelancerCall__Outputs {
  _call: AddFreelancerCall;

  constructor(call: AddFreelancerCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class AssignProjectCall extends ethereum.Call {
  get inputs(): AssignProjectCall__Inputs {
    return new AssignProjectCall__Inputs(this);
  }

  get outputs(): AssignProjectCall__Outputs {
    return new AssignProjectCall__Outputs(this);
  }
}

export class AssignProjectCall__Inputs {
  _call: AssignProjectCall;

  constructor(call: AssignProjectCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _freelancer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AssignProjectCall__Outputs {
  _call: AssignProjectCall;

  constructor(call: AssignProjectCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class CompleteProjectCall extends ethereum.Call {
  get inputs(): CompleteProjectCall__Inputs {
    return new CompleteProjectCall__Inputs(this);
  }

  get outputs(): CompleteProjectCall__Outputs {
    return new CompleteProjectCall__Outputs(this);
  }
}

export class CompleteProjectCall__Inputs {
  _call: CompleteProjectCall;

  constructor(call: CompleteProjectCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CompleteProjectCall__Outputs {
  _call: CompleteProjectCall;

  constructor(call: CompleteProjectCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get uri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _listing_price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _project_cost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class PurchaseListingCall extends ethereum.Call {
  get inputs(): PurchaseListingCall__Inputs {
    return new PurchaseListingCall__Inputs(this);
  }

  get outputs(): PurchaseListingCall__Outputs {
    return new PurchaseListingCall__Outputs(this);
  }
}

export class PurchaseListingCall__Inputs {
  _call: PurchaseListingCall;

  constructor(call: PurchaseListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PurchaseListingCall__Outputs {
  _call: PurchaseListingCall;

  constructor(call: PurchaseListingCall) {
    this._call = call;
  }
}

export class RejectProjectCall extends ethereum.Call {
  get inputs(): RejectProjectCall__Inputs {
    return new RejectProjectCall__Inputs(this);
  }

  get outputs(): RejectProjectCall__Outputs {
    return new RejectProjectCall__Outputs(this);
  }
}

export class RejectProjectCall__Inputs {
  _call: RejectProjectCall;

  constructor(call: RejectProjectCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _freelancer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RejectProjectCall__Outputs {
  _call: RejectProjectCall;

  constructor(call: RejectProjectCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
